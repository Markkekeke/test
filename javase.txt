属性(全局变量)和局部变量的区别：
  	定义位置：
  		属性定义在类中方法的外
  		局部变量定义在方法体或者代码块中
  	定义和使用的顺序：
  		属性定义在类中方法体上或者下都可以
  		局部变量定义在方法体或者代码块中，需要先声明，在赋值 然后在使用
  	两者是否可以重名：
  		可以，通过this区分，被this修饰的变量是属性(全局变量)
	默认值：
  		局部变量没有默认值
  		属性有默认值



构造方法：是一种特殊的方法，用来创建对象的，还可以对属性赋值
	语法：类名 对象名 = new 构造方法(){}
  构造方法的书写特点：
  	构造方法名和类名相同，包括大小写
  	构造方法中没有放回值类型，连void都不能有
 	不能return一个值
  
  如果没有手动给出构造方法，系统会默认提供一个空参数构造方法。
  一旦手动给出构造方法，系统将不再提供默认的空参构造方法。



static:静态关键字
  	修饰：属性---静态属性
  		方法---静态方法
 	如何访问静态内容？
  		属性：类名.属性	也可以通过对象的方式访问，但是不推荐
  		方法：类名.方法名()	也可以通过对象的方式访问，但是不推荐
  		代码块：再执行构造方法之前被系统调用，而且只执行一次
  被静态关键字修饰的内容会随着类的加载而加载，他是优先于对象的，被所有对象所共享
  所以静态的只能访问静态的，不能访问非静态的，但是非静态的既可以访问静态的还可以访问非静态的。




关键字：对于编译器来说有特殊含义的单词(红色的单词)
保留字：java已经征用了，但还没有具体含义的单词，常见的保留字：goto
标识符：指的是包名、类名、方法名、变量名、参数名等(凡是自己起名的地方)
  规则：由数组、字母、下划线、$组成，其中数字不能做开头
  规范：
  	类名：每个单词首字母大写
  	方法名、变量名：一个单词首字母小写，多个单词，第一个单词首字母小写，剩下每个单词首字母大写
 	包名：每个字母都小写，中间用.分隔
 	常量名：每个字母都大写



super():访问父类无参数构造方法，即使不写系统会默认给出
super(参数):访问父类有参数构造方法，写才有，不写没有
this():访问本类无参数构造方法，写才有，不写没有
this(参数):访问本类有参数构造方法，写才有，不写没有
	this和super都要求在构造方法的第一行，所以不能同时使用



		private		default		protected	public	
同一类		√		√		√		√
同一包中的类			√		√		√
不同包中的子类					√		√
其他包中的类							√



String的创建：有两种方式:
		静态方式（常用）。像是给变量直接赋值一样来使用。如：String s1 = “abc”; String s2 = “abc”;
		动态方式。动态的内存分配，使用new运算符。如：String s3= new String(“abc”); String s4= new String(“abc”);
	两种方式创建的字符串区别：
		使用静态方式创建的字符串，在方法区的常量池中只会产生唯一一个字符串对象，
			使用该方式产生同样一个字符串时，内存中不再开辟另外一块空间，而是两个引用变量指向同一个字符串对象。
		使用动态方式创建的字符串，在堆内存中会产生出不同的对象。
 		(静态方式是在常量池里定义一个值，动态方式是在堆空间定义两个空间定义两个值)
